class HorizontalScroll{element;slides;sensitivity;dragState;dragStartPos;dragMouseDownPos;dragMouseMovePos;constructor(e,t=1,s){if(this.sensitivity=t,!e)return console.warn("'element' not in DOM."),null;this.element=e,this.slides=s||e,this.dragState=!1,this.dragStartPos=0,this.element.addEventListener("mousedown",(e=>this.interactDown(e))),this.element.addEventListener("mousemove",(e=>this.interactMove(e))),window.addEventListener("mouseup",(e=>this.interactUp(e))),this.element.addEventListener("touchstart",(e=>this.interactDown(e))),this.element.addEventListener("touchmove",(e=>this.interactMove(e))),window.addEventListener("touchend",(e=>this.interactUp(e))),this.element.addEventListener("wheel",(e=>{let t=e.deltaY>0?1:-1;this.slide(t),t>0?this.dispatchEvent("wheeldown"):this.dispatchEvent("wheelup")}))}setSlides(e){e instanceof HTMLElement?this.slides=e:console.error("'element' is not instances of HTMLELement")}interactDown(e){this.dragState=!0,e instanceof MouseEvent&&(this.dragMouseDownPos=e.clientX),e instanceof TouchEvent&&(this.dragMouseDownPos=e.touches[0].clientX),this.dragStartPos=this.element.scrollLeft,this.dispatchEvent("held")}interactUp(e){this.dragState=!1,this.dispatchEvent("release")}interactMove(e){this.dragState&&(e instanceof MouseEvent&&(this.dragMouseMovePos=e.clientX),e instanceof TouchEvent&&(this.dragMouseMovePos=e.touches[0].clientX),e.type.includes("touch")||(this.element.scrollLeft=this.dragStartPos+this.dragMouseDownPos-this.dragMouseMovePos),this.dragMouseMovePos>this.dragMouseDownPos?this.dispatchEvent("scrollright"):this.dispatchEvent("scrollleft"))}async slide(e,t=this.sensitivity){let s=t??this.sensitivity;if(0!==e){let t=this.slides.children[0].clientWidth*e*s;this.element.scrollLeft+=t}else console.warn("'slide' must be a non-zero value.")}dispatchEvent(e){this.element.dispatchEvent(new CustomEvent("HorizontalScroll",{bubbles:!0,detail:{message:e}}))}}
